{"version":3,"file":"main.js","mappings":"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","sources":["webpack://nx-university-graphql-test/./apps/university-backend-endpoint/src/app/CourseModel.ts","webpack://nx-university-graphql-test/./apps/university-backend-endpoint/src/app/StudentModel.ts","webpack://nx-university-graphql-test/./apps/university-backend-endpoint/src/app/schema.ts","webpack://nx-university-graphql-test/./apps/university-backend-endpoint/src/main.ts","webpack://nx-university-graphql-test/external commonjs \"apollo-server-core\"","webpack://nx-university-graphql-test/external commonjs \"apollo-server-express\"","webpack://nx-university-graphql-test/external commonjs \"express\"","webpack://nx-university-graphql-test/external commonjs \"graphql-compose\"","webpack://nx-university-graphql-test/external commonjs \"graphql-compose-mongoose\"","webpack://nx-university-graphql-test/external commonjs \"mongoose\"","webpack://nx-university-graphql-test/external commonjs \"tslib\"","webpack://nx-university-graphql-test/external node-commonjs \"http\"","webpack://nx-university-graphql-test/webpack/bootstrap","webpack://nx-university-graphql-test/webpack/before-startup","webpack://nx-university-graphql-test/webpack/startup","webpack://nx-university-graphql-test/webpack/after-startup"],"sourcesContent":["import mongoose from \"mongoose\"\nimport { composeMongoose } from \"graphql-compose-mongoose\"\nimport { IStudent,StudentSchema } from \"./StudentModel\"\n\nexport interface ICourse {\n    name: string,\n    students: [IStudent],\n    career: string,\n}\n\nexport interface ICourseDocument extends ICourse, mongoose.Document { }\n\nexport const CourseSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: true,\n    },\n    students: {\n        type: [StudentSchema],\n        required: false,\n    },\n    career: {\n        type: String,\n        required: true,\n    },\n})\n\nexport const Course = mongoose.model<ICourseDocument>('Course',CourseSchema)\n\nconst customizationOtions = {}\n\nexport const CourseTC = composeMongoose(Course, customizationOtions)","import mongoose from \"mongoose\"\nimport { composeMongoose } from \"graphql-compose-mongoose\"\nexport interface IStudent {\n    ci: string,\n    name: string,\n    lastName: string,\n    career: string,\n    photo: string\n}\n\nexport interface IStudentDocument extends IStudent, mongoose.Document { }\n\nexport const StudentSchema = new mongoose.Schema({\n    ci: {\n        type: String,\n        required: true,\n    },\n    name: {\n        type: String,\n        required: true\n    },\n    lastName: {\n        type: String,\n        required: true,\n    },\n    career: {\n        type: String,\n        required: true,\n    },\n    photo: {\n        type: String,\n        required: true,\n    },\n})\n\nexport const Student = mongoose.model<IStudentDocument>('Student',StudentSchema)\n\nconst customizationOtions = {}\n\nexport const StudentTC = composeMongoose(Student, customizationOtions)","import { schemaComposer, SchemaComposer } from \"graphql-compose\"\nimport {StudentTC} from './StudentModel'\nimport {CourseTC} from './CourseModel'\n\nschemaComposer.Query.addFields({\n    getStudentById: StudentTC.mongooseResolvers.findOne(),\n    getStudents: StudentTC.mongooseResolvers.findMany(),\n    studentCount: StudentTC.mongooseResolvers.count(),\n    courseOne: CourseTC.mongooseResolvers.findOne(),\n    courseMany: CourseTC.mongooseResolvers.findMany(),\n    courseCount: CourseTC.mongooseResolvers.count(),\n})\n\nschemaComposer.Mutation.addFields({\n    studentCreateOne: StudentTC.mongooseResolvers.createOne(),\n    studentUpdateOne: StudentTC.mongooseResolvers.updateOne(),\n    studentUpdateMany: StudentTC.mongooseResolvers.updateMany(),\n    studentRemoveOne: StudentTC.mongooseResolvers.removeOne(),\n    courseCreateOne: CourseTC.mongooseResolvers.createOne(),\n    courseUpdateOne: CourseTC.mongooseResolvers.updateOne(),\n    courseUpdateMany: CourseTC.mongooseResolvers.updateMany(),\n    courseRemoveOne: CourseTC.mongooseResolvers.removeOne(),\n    \n})\n\nexport const schema = schemaComposer.buildSchema()\n","/**\n * This is not a production server yet!\n * This is only a minimal backend to get started.\n */\n\nimport { ApolloError, ApolloServer } from 'apollo-server-express'\nimport { ApolloServerPluginDrainHttpServer } from 'apollo-server-core'\nimport * as express from 'express'\nimport * as http from 'http'\nimport { schema } from './app/schema'\nimport mongoose from 'mongoose'\n\nconst mongodbURI = process.env.MONGODB_URI\nconst dbName = process.env.MONGODB_NAME\n\nexport const connectDB = async (mongodbURI: string, dbName: string) => {\n  if (!mongodbURI || !dbName) {\n    return Promise.reject('MongoDB URI or DB Name is not defined')\n  }\n  try {\n    await mongoose.connect(mongodbURI, { autoIndex: false, dbName }, (error) => {\n      if (error) {\n        console.log(error)\n      }\n    })\n    console.log('üê£ mongodb database started')\n    console.log(`üôâ dbURL `, mongodbURI)\n    console.log(`üôâ dbName `, dbName)\n    return mongoose.connection\n  } catch (error) {\n    console.log(error)\n    return undefined\n  }\n}\n\nasync function startApolloServer() {\n  try {\n    await connectDB(mongodbURI, dbName)\n\n    const app = express()\n    const httpServer = http.createServer(app)\n    const server = new ApolloServer({\n      schema: schema,\n      csrfPrevention: true,\n      cache: 'bounded',\n      plugins: [ApolloServerPluginDrainHttpServer({ httpServer })],\n    })\n\n    await server.start()\n\n    server.applyMiddleware({ app })\n\n    await new Promise<void>((resolve) => httpServer.listen({ port: 4000 }, resolve))\n\n    console.log(`üöÄ Server ready at http://localhost:4000${server.graphqlPath}`)\n  } catch (err) {\n    throw new ApolloError('Something went wrong in Apollo')\n  }\n}\n\nconst server = startApolloServer()\n\nexport default server\n\n\n","module.exports = require(\"apollo-server-core\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"express\");","module.exports = require(\"graphql-compose\");","module.exports = require(\"graphql-compose-mongoose\");","module.exports = require(\"mongoose\");","module.exports = require(\"tslib\");","module.exports = require(\"http\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./apps/university-backend-endpoint/src/main.ts\");\n",""],"names":[],"sourceRoot":""}